# Generated by Django 3.1.2 on 2020-10-17 14:34

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChargingRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('vehicle', models.CharField(max_length=100)),
                ('minimum_minutes', models.IntegerField()),
                ('minimum_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('succeeding_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('flat_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('overnight_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('lost_card', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('command', models.CharField(max_length=10)),
                ('overnight_start', models.TimeField(blank=True, null=True)),
                ('overnight_end', models.TimeField(blank=True, null=True)),
                ('ov_24', models.SmallIntegerField(blank=True, null=True)),
                ('int_time', models.SmallIntegerField(blank=True, null=True)),
                ('isTF', models.SmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('disabled', 'Disabled')], default='active', max_length=9)),
            ],
            options={
                'verbose_name_plural': 'charging_rules',
                'db_table': 'charging_rule',
            },
        ),
        migrations.CreateModel(
            name='Companydb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, db_column='Company', max_length=255, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('tel', models.CharField(blank=True, db_column='Tel', max_length=255, null=True)),
                ('tin', models.CharField(blank=True, db_column='TIN', max_length=255, null=True)),
                ('permit', models.CharField(blank=True, db_column='Permit', max_length=255, null=True)),
                ('parkingslot', models.BigIntegerField(blank=True, db_column='ParkingSlot', null=True)),
                ('parkingarea', models.CharField(blank=True, db_column='ParkingArea', max_length=255, null=True)),
            ],
            options={
                'db_table': 'companydb',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_type', models.CharField(max_length=100)),
                ('vat_exempt', models.SmallIntegerField(blank=True, null=True)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('is_free', models.SmallIntegerField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'discounts',
                'db_table': 'discount',
            },
        ),
        migrations.CreateModel(
            name='DiscountFix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_type', models.CharField(max_length=100)),
                ('vat_exempt', models.SmallIntegerField(blank=True, null=True)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('is_free', models.SmallIntegerField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'discount_fix',
                'db_table': 'discount_fix',
            },
        ),
        migrations.CreateModel(
            name='FlatRateDays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=100)),
                ('monday', models.SmallIntegerField(blank=True, null=True)),
                ('tuesday', models.SmallIntegerField(blank=True, null=True)),
                ('wednesday', models.SmallIntegerField(blank=True, null=True)),
                ('thursday', models.SmallIntegerField(blank=True, null=True)),
                ('friday', models.SmallIntegerField(blank=True, null=True)),
                ('saturday', models.SmallIntegerField(blank=True, null=True)),
                ('sunday', models.SmallIntegerField(blank=True, null=True)),
                ('holiday', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'flatrate_days',
                'db_table': 'flatrate_days',
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holiday_date', models.DateField(null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'holidays',
                'db_table': 'holiday',
            },
        ),
        migrations.CreateModel(
            name='ManualTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_no', models.IntegerField(unique=True)),
                ('business_date', models.DateField()),
                ('operator', models.CharField(max_length=40)),
                ('plate_number', models.CharField(blank=True, max_length=40, null=True)),
                ('time_in', models.DateTimeField()),
                ('time_out', models.DateTimeField()),
                ('vehicle_type', models.CharField(blank=True, max_length=40, null=True)),
                ('gross_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vatable_sale', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_type', models.CharField(max_length=40)),
                ('vat_exempt_sale', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('regular_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('special_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat_adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat_payable', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_sales', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_entry', models.DateTimeField()),
                ('remarks', models.CharField(max_length=40)),
                ('parker_name', models.CharField(blank=True, max_length=40, null=True)),
                ('parker_id', models.CharField(blank=True, max_length=40, null=True)),
                ('pos_name', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'db_table': 'manual_transaction',
            },
        ),
        migrations.CreateModel(
            name='NonCash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.SmallIntegerField()),
            ],
            options={
                'verbose_name_plural': 'non_cash',
                'db_table': 'non_cash',
            },
        ),
        migrations.CreateModel(
            name='Tblpermit',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('pc', models.CharField(blank=True, db_column='PC', max_length=100, null=True)),
                ('min', models.CharField(blank=True, db_column='MIN', max_length=255, null=True)),
                ('serial', models.CharField(blank=True, db_column='Serial', max_length=255, null=True)),
                ('accred', models.CharField(blank=True, db_column='Accred', max_length=255, null=True)),
                ('dateissued', models.CharField(blank=True, db_column='DateIssued', max_length=255, null=True)),
                ('permit', models.CharField(blank=True, db_column='Permit', max_length=255, null=True)),
                ('vatreg', models.CharField(blank=True, db_column='VATReg', max_length=255, null=True)),
                ('accreddate', models.CharField(blank=True, db_column='AccredDate', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblpermit',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos_name', models.CharField(blank=True, max_length=45, null=True)),
                ('cardcode', models.CharField(blank=True, max_length=45, null=True)),
                ('or_number', models.CharField(blank=True, max_length=45, null=True)),
                ('time_in', models.DateTimeField(blank=True, null=True)),
                ('time_out', models.DateTimeField(blank=True, null=True)),
                ('duration', models.CharField(blank=True, max_length=45, null=True)),
                ('vehicle_type', models.CharField(blank=True, max_length=45, null=True)),
                ('plate_num', models.CharField(blank=True, max_length=45, null=True)),
                ('username', models.CharField(blank=True, max_length=45, null=True)),
                ('transaction_datetime', models.DateTimeField(blank=True, null=True)),
                ('business_date', models.DateField(blank=True, null=True)),
                ('fee_parking', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fee_overnight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fee_lostcard', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fee_damagedcard', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gross_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_name', models.CharField(blank=True, max_length=45, null=True)),
                ('discount_regular', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_special', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount_due', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cash_tendered', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cash_change', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat_payable', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat_exempt_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat_spcl_disc', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat_zero_rated_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vehicle_class', models.CharField(blank=True, max_length=45, null=True)),
                ('parker_name', models.CharField(blank=True, max_length=45, null=True)),
                ('parker_address', models.CharField(blank=True, max_length=45, null=True)),
                ('parker_tin', models.CharField(blank=True, max_length=45, null=True)),
                ('parker_ref_id', models.CharField(blank=True, max_length=45, null=True)),
                ('re_print', models.IntegerField(blank=True, null=True)),
                ('parking_class', models.CharField(blank=True, max_length=45, null=True)),
                ('cash', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('credit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('voucher', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('coupon', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gcash', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('beep', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('paymaya', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('succeeding_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='TransactionZeroAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_datetime', models.DateTimeField(blank=True, null=True)),
                ('business_date', models.DateField(blank=True, null=True)),
                ('vehicle_type', models.CharField(blank=True, max_length=45, null=True)),
                ('time_in', models.DateTimeField(blank=True, null=True)),
                ('time_out', models.DateTimeField(blank=True, null=True)),
                ('pos_name', models.CharField(blank=True, max_length=45, null=True)),
                ('username', models.CharField(blank=True, max_length=45, null=True)),
                ('parker_type', models.CharField(blank=True, max_length=45, null=True)),
                ('parker_name', models.CharField(blank=True, max_length=45, null=True)),
                ('parker_address', models.CharField(blank=True, max_length=45, null=True)),
                ('parker_ref_id', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'transaction_zero_amount',
            },
        ),
        migrations.CreateModel(
            name='UserRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=50, unique=True)),
                ('server_set', models.IntegerField()),
                ('user_set', models.IntegerField()),
                ('device_set', models.IntegerField()),
                ('charging_set', models.IntegerField()),
                ('report_set', models.IntegerField()),
                ('terminate_set', models.IntegerField()),
                ('set_reference', models.IntegerField()),
                ('syslog_setting', models.IntegerField()),
                ('cashier', models.IntegerField()),
                ('log_report', models.IntegerField()),
            ],
            options={
                'db_table': 'user_roles',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=45, unique=True)),
                ('salted_hash', models.CharField(max_length=87)),
                ('firstname', models.CharField(max_length=45)),
                ('lastname', models.CharField(max_length=45)),
                ('nickname', models.CharField(default=0.0, max_length=45)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('user_roles', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Vouchers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_type', models.CharField(max_length=100)),
                ('amount_value', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'vouchers',
                'db_table': 'vouchers',
            },
        ),
    ]
